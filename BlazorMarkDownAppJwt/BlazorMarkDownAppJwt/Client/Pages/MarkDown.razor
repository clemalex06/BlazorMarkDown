@page "/markdown"
@using BlazorMarkDownAppJwt.Client.Components
@using BlazorMarkDownAppJwt.Shared
@inject HttpClient Http
@inject IJSRuntime jsr

<UserComponent></UserComponent>

<h1>MarkDown</h1>

<p>Let's use incredible MarkDownEditor !'.</p>
<div class="row">
	<div class="mb-2 text-right">
		<button class="btn btn-primary" @onclick="UpdatePreview">Update Preview</button>
		<button class="btn btn-primary" @onclick="UpdatePreview">Save Content</button>
	</div>
</div>
<div class="row">
    <div class="col-6">
		<h3>Edit</h3>
        <textarea class="text-area-resized" @bind="markDownModel.Body"></textarea>
    </div>
    <div class="col-6">
		<h3>Preview</h3>
		<div>@markupString</div>
    </div>
</div>

@code {
	private MarkDownModel markDownModel = new MarkDownModel
	{
		Body = string.Empty
	};

	private MarkupString markupString;

	private void UpdatePreview()
	{
		markupString = (MarkupString)markDownModel.Html;
	}

	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();
		try
		{
			var requestMsg = new HttpRequestMessage(HttpMethod.Get, "/api/markdown");
			var response = await Http.SendAsync(requestMsg);
			if (response.IsSuccessStatusCode)
			{
				markDownModel = await response.Content.ReadFromJsonAsync<MarkDownModel>();
				markupString = (MarkupString)markDownModel.Html;
			}
		}
		catch (Exception)
		{

		}
	}

}
